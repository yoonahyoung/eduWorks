<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="personnelMapper">
	
	<resultMap type="Member" id="resultTeacherList">
		<result column="mem_no" property="memNo"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_pwd" property="memPwd"/>
		<result column="mem_name" property="memName"/>
		<result column="dept_name" property="deptCode"/>
		<result column="job_name" property="jobCode"/>
		<result column="mem_phone" property="memPhone"/>
		<result column="mem_businessnum" property="memBusinessnum"/>
		<result column="mem_email" property="memEmail"/>
		<result column="mem_birth" property="memBirth"/>
		<result column="mem_postal_code" property="memPostalCode"/>
		<result column="mem_postal_ad" property="memPostalAd"/>
		<result column="mem_postal_detail" property="memPostalDetail"/>
		<result column="mem_postal_refer" property="memPostalRefer"/>
		<result column="mem_enroll_date" property="memEnrollDate"/>
		<result column="mem_resign_date" property="memResignDate"/>
		<result column="mem_resign_status" property="memResignStatus"/>
		<result column="mem_profile" property="memProfile"/>
	</resultMap>
	
	<resultMap type="com.finalProject.eduWorks.personnel.model.vo.AutoHo" id="resultAutoHo">
		<result column="mem_no" property="memNo"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_enroll_date" property="memEnrollDate"/>
		<result column="mem_count" property="memCount"/>
		<result column="year" property="year"/>
		<result column="month" property="month"/>
		<result column="day" property="day"/>
	</resultMap>
	
	<resultMap type="Member" id="resultTeacherDetailList">
		<result column="mem_no" property="memNo"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_pwd" property="memPwd"/>
		<result column="mem_name" property="memName"/>
		<result column="dept_code" property="deptCode"/>
		<result column="job_code" property="jobCode"/>
		<result column="mem_phone" property="memPhone"/>
		<result column="mem_businessnum" property="memBusinessnum"/>
		<result column="mem_email" property="memEmail"/>
		<result column="mem_birth" property="memBirth"/>
		<result column="mem_postal_code" property="memPostalCode"/>
		<result column="mem_postal_ad" property="memPostalAd"/>
		<result column="mem_postal_detail" property="memPostalDetail"/>
		<result column="mem_postal_refer" property="memPostalRefer"/>
		<result column="mem_enroll_date" property="memEnrollDate"/>
		<result column="mem_resign_date" property="memResignDate"/>
		<result column="mem_resign_status" property="memResignStatus"/>
		<result column="mem_profile" property="memProfile"/>
	</resultMap>
	
	<resultMap type="com.finalProject.eduWorks.personnel.model.vo.Ojt" id="resultOjt">
		<result column="mem_no" property="memNo"/>
		<result column="mem_name" property="memName"/>
		<result column="dept_name" property="deptName"/>
		<result column="job_name" property="jobName"/>
		<result column="ojt_date" property="ojtDate"/>
		<result column="ojt_status" property="ojtStatus"/>
		<result column="mem_email" property="memEmail"/>
	</resultMap>
	
	<resultMap type="Department" id="resultDept">
		<result column="dept_code" property="deptCode"/>
		<result column="dept_name" property="deptName"/>
	</resultMap>
	
	<resultMap type="Job" id="resultJob">
		<result column="job_code" property="jobCode"/>
		<result column="job_name" property="jobName"/>
	</resultMap>
	
	<resultMap type="com.finalProject.eduWorks.personnel.model.vo.Attendance" id="resultAtt">
		<result column="att_no" property="attNo"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_no" property="memNo"/>
		<result column="mem_enroll_date" property="memEnrollDate"/>
		<result column="att_date" property="attDate"/>
		<result column="att_fixedin" property="attFixedin"/>
		<result column="att_fixedout" property="attFixedout"/>
		<result column="att_in" property="attIn"/>
		<result column="att_out" property="attOut"/>
		<result column="att_workoff" property="attWorkoff"/>
		<result column="att_worktime" property="attWorktime"/>
		<result column="att_status" property="attStatus"/>
		<result column="att_hstatus" property="attHstatus"/>
	</resultMap>
	
	<resultMap type="com.finalProject.eduWorks.personnel.model.vo.Restdate" id="resultRestDate">
		<result column="re_restdate" property="reRestdate"/>
		<result column="re_datename" property="reDatename"/>
	</resultMap>
	
	<resultMap type="com.finalProject.eduWorks.personnel.model.vo.Adjust" id="resultAdj">
		<result column="adj_no" property="adjNo"/>
		<result column="att_no" property="attNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="adj_objdate" property="adjObjdate"/>
		<result column="adj_in" property="adjIn"/>
		<result column="adj_out" property="adjOut"/>
		<result column="adj_reason" property="adjReason"/>
		<result column="adj_date" property="adjDate"/>
		<result column="adj_file" property="adjFile"/>
		<result column="adj_status" property="adjStatus"/>
		<result column="att_in" property="attIn"/>
		<result column="att_out" property="attOut"/>
		<result column="att_status" property="attStatus"/>
		<result column="att_hstatus" property="attHstatus"/>
		<result column="dept_name" property="deptName"/>
		<result column="job_name" property="jobName"/>
		<result column="mem_name" property="memName"/>
		<result column="dept_code" property="deptCode"/>
		<result column="job_code" property="jobCode"/>
		<result column="adj_denycontent" property="adjDenycontent"/>
	</resultMap>
	
	<resultMap type="com.finalProject.eduWorks.personnel.model.vo.HolidayForm" id="resultHolidayForm">
		<result column="aprv_no" property="aprvNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="APRV_TYPE" property="aprvType"/>
		<result column="APRV_DOC_STATUS" property="aprvDocStatus"/>
		<result column="APRV_DOC_ENDATE" property="aprvDocEndate"/>
		<result column="APRV_STATUS" property="aprvStatus"/>
		<result column="LEAVE_TYPE" property="leaveType"/>
		<result column="LEAVE_START_DATE" property="leaveStartDate"/>
		<result column="LEAVE_END_DATE" property="leaveEndDate"/>
		<result column="REQUEST_PERIOD" property="requestPeriod"/>
		<result column="S_HALF_DAY_LEAVE" property="aa"/>
		<result column="F_HALF_DAY_LEAVE" property="bb"/>
		<result column="LEAVE_REASON" property="leave"/>
		<result column="mem_name" property="memName"/>
		<result column="job_name" property="jobName"/>
		<result column="dept_name" property="deptName"/>
	</resultMap>
	<resultMap type="com.finalProject.eduWorks.personnel.model.vo.Holiday" id="resultHoliday">
		<result column="mem_no" property="memNo"/>
		<result column="ho_date" property="hoDate"/>
		<result column="ho_num" property="hoNum"/>
		<result column="ho_comment" property="hoComment"/>
		<result column="mem_name" property="memName"/>
		<result column="job_name" property="jobName"/>
		<result column="dept_name" property="deptName"/>
	</resultMap>
	
	<select id="teacherListCount" resultType="_int">
		select count(*)
		  from tb_member
		 where dept_code = 'D0'
	</select>
	
	<select id="teacherList" resultMap="resultTeacherList">
		select mem_no
		     , mem_id
		     , mem_pwd
		     , mem_name
		     , dept_name
		     , job_name
		     , mem_phone
		     , mem_businessnum
		     , mem_email
		     , mem_birth
		     , mem_postal_code
		     , mem_postal_ad
		     , mem_postal_detail
		     , mem_postal_refer
		     , mem_enroll_date
		     , mem_resign_date
		     , mem_resign_status
		     , mem_profile
		 from tb_member t
		 join tb_department d on (d.dept_code = t.dept_code)
         join tb_job j on (j.job_code = t.job_code)
		where t.dept_code = 'D0' 
		order 
		   by mem_no desc
	</select>
	
	<select id="searchTeacherListCount" resultType="_int">
		select count(*)
		  from tb_member
		 where dept_code = 'D0'
		 <choose>
		 	<when test="check1==true and check2==false">
		 		and mem_resign_status = 'N'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true">
		 		and mem_resign_status = 'Y'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<otherwise>
		 		and mem_name like '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
	</select>
	
	<select id="SearchTeacherList" resultMap="resultTeacherList">
		select mem_no
		     , mem_id
		     , mem_pwd
		     , mem_name
		     , dept_name
		     , job_name
		     , mem_phone
		     , mem_businessnum
		     , mem_email
		     , mem_birth
		     , mem_postal_code
		     , mem_postal_ad
		     , mem_postal_detail
		     , mem_postal_refer
		     , mem_enroll_date
		     , mem_resign_date
		     , mem_resign_status
		     , mem_profile
		 from tb_member t
		 join tb_department d on (d.dept_code = t.dept_code)
         join tb_job j on (j.job_code = t.job_code)
		where t.dept_code = 'D0' 
		<choose>
		 	<when test="check1==true and check2==false">
		 		and mem_resign_status = 'N'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true">
		 		and mem_resign_status = 'Y'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<otherwise>
		 		and mem_name like '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
		order 
		   by mem_no desc
	</select>
	
	<update id="resignTeacher">
		update tb_member
		   set mem_resign_status = 'Y',
		       mem_resign_date = sysdate
		 where mem_no = #{memNo}
	</update>
	
	<select id="detailTeacherInfo" resultMap="resultTeacherDetailList">
		select mem_no
		     , mem_id
		     , mem_pwd
		     , mem_name
		     , dept_code
		     , job_code
		     , mem_phone
		     , mem_businessnum
		     , mem_email
		     , mem_birth
		     , mem_postal_code
		     , mem_postal_ad
		     , mem_postal_detail
		     , mem_postal_refer
		     , mem_enroll_date
		     , mem_resign_date
		     , mem_resign_status
		     , mem_profile
		 from tb_member 
		 
		where mem_no = #{memNo}
	</select>
	
	<select id="selectDept" resultMap="resultDept">
		select dept_code
		     , dept_name
		  from tb_department
	</select>
	
	<select id="selectJob" resultMap="resultJob">
		select job_code
		     , job_name
		  from tb_job
	</select>
	
	<update id="returnTeacher">
		update tb_member
		   set mem_resign_status = 'N',
		       mem_resign_date = null
		 where mem_no = #{memNo}
	</update>
	
	<update id="uploadProfileImg">
		update tb_member
		   set mem_profile = #{memProfile}
		 where mem_no = #{memNo}
	</update>
	
	<update id="defaultProfile">
		update tb_member
		   set mem_profile = null
		 where mem_no = #{memNo}
	</update>
	
	<update id="updateMember">
		update tb_member
		   set mem_id = #{memId},
		       mem_name = #{memName},
		       dept_code = #{deptCode},
		       job_code = #{jobCode},
		       mem_enroll_date = #{memEnrollDate},
		       mem_phone = #{memPhone},
		       mem_email = #{memEmail},
		       mem_birth = #{memBirth},
		       mem_postal_code = #{memPostalCode},
		       mem_postal_ad = #{memPostalAd},
		       mem_postal_detail = #{memPostalDetail},
		       mem_postal_refer = #{memPostalRefer},
		       mem_profile = #{memProfile}
		       <if test="memResignDate != ''">
		       	,mem_resign_date = #{memResignDate},
		       	mem_resign_status = 'Y'
		       </if>
		 where mem_no = #{memNo}
	</update>
	
	<update id="updateMyInfo">
		update tb_member
		   set mem_id = #{memId},
		       mem_phone = #{memPhone},
		       mem_email = #{memEmail},
		       mem_birth = #{memBirth},
		       mem_postal_code = #{memPostalCode},
		       mem_postal_ad = #{memPostalAd},
		       mem_postal_detail = #{memPostalDetail},
		       mem_postal_refer = #{memPostalRefer},
		       mem_profile = #{memProfile}
		 where mem_no = #{memNo}
	</update>
	
	<insert id="addMember">
		insert
		  into tb_member
		     ( mem_no
		     , mem_id
		     , mem_pwd
		     , mem_name
		     , dept_code
		     , job_code
		     , mem_phone
		     , mem_businessnum
		     , mem_email
		     , mem_birth
		     , mem_postal_code
		     , mem_postal_ad
		     , mem_postal_detail
		     , mem_postal_refer
		     , mem_enroll_date
		     , mem_profile
		     )
		values
			 ( seq_memno.nextval
		     , #{memId}
		     , #{memPwd}
		     , #{memName}
		     , #{deptCode}
		     , #{jobCode}
		     , #{memPhone}
		     , #{memBusinessnum}
		     , #{memEmail}
		     , #{memBirth}
		     , #{memPostalCode}
		     , #{memPostalAd}
		     , #{memPostalDetail}
		     , #{memPostalRefer}
		     , #{memEnrollDate}
		     , #{memProfile}
		     )   
	</insert>
	
	<select id="employeeListCount" resultType="_int">
		select count(*)
		  from tb_member
		 where dept_code != 'D0'
	</select>
	
	<select id="employeeList" resultMap="resultTeacherList">
		select mem_no
		     , mem_id
		     , mem_pwd
		     , mem_name
		     , dept_name
		     , job_name
		     , mem_phone
		     , mem_businessnum
		     , mem_email
		     , mem_birth
		     , mem_postal_code
		     , mem_postal_ad
		     , mem_postal_detail
		     , mem_postal_refer
		     , mem_enroll_date
		     , mem_resign_date
		     , mem_resign_status
		     , mem_profile
		 from tb_member t
		 join tb_department d on (d.dept_code = t.dept_code)
         join tb_job j on (j.job_code = t.job_code)
		where t.dept_code != 'D0' 
		order 
		   by mem_no desc
	</select>
	
	<select id="searchEmployeeListCount" resultType="_int">
		select count(*)
		  from tb_member
		 where dept_code != 'D0'
		<if test="deptCode!='all' and jobCode!='all'">
			and job_code = #{jobCode}
			and dept_code = #{deptCode}
		</if>
		<if test="deptCode=='all' and jobCode!='all'">
			and job_code = #{jobCode}
		</if>
		<if test="deptCode!='all' and jobCode=='all'">
			and dept_code = #{deptCode}
		</if>
		 <choose>
		 	<when test="check1==true and check2==false">
		 		and mem_resign_status = 'N'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true">
		 		and mem_resign_status = 'Y'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<otherwise>
		 		and mem_name like '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
	</select>
	
	<select id="SearchEmployeeList" resultMap="resultTeacherList">
		select mem_no
		     , mem_id
		     , mem_pwd
		     , mem_name
		     , dept_name
		     , job_name
		     , mem_phone
		     , mem_businessnum
		     , mem_email
		     , mem_birth
		     , mem_postal_code
		     , mem_postal_ad
		     , mem_postal_detail
		     , mem_postal_refer
		     , mem_enroll_date
		     , mem_resign_date
		     , mem_resign_status
		     , mem_profile
		 from tb_member t
		 join tb_department d on (d.dept_code = t.dept_code)
         join tb_job j on (j.job_code = t.job_code)
		where t.dept_code != 'D0' 
		<if test="deptCode!='all' and jobCode!='all'">
			and t.job_code = #{jobCode}
			and t.dept_code = #{deptCode}
		</if>
		<if test="deptCode=='all' and jobCode!='all'">
			and t.job_code = #{jobCode}
		</if>
		<if test="deptCode!='all' and jobCode=='all'">
			and t.dept_code = #{deptCode}
		</if>
		
		<choose>
		 	<when test="check1==true and check2==false">
		 		and mem_resign_status = 'N'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true">
		 		and mem_resign_status = 'Y'
		 		and mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<otherwise>
		 		and mem_name like '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
		order 
		   by mem_no desc
	</select>
	
	<select id="ojtListCount" resultType="_int">
		select count(*)
		  from tb_ojt
	</select>
	
	<select id="ojtList" resultMap="resultOjt">
		select o.mem_no
		     , m.mem_name
		     , d.dept_name
		     , j.job_name
		     , ojt_date
		     , ojt_status
		     , m.mem_email
		  from tb_ojt o  
		  join tb_member m on (o.mem_no = m.mem_no)
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		 order
		    by o.mem_no desc
	</select>
	
	<select id="searchOjtListCount" resultType="_int">
		select count(*)
		  from tb_ojt o
		  join tb_member m on (o.mem_no = m.mem_no)
		 <choose>
		 	<when test="check1==true and check2==false and check3==false">
		 		where o.ojt_status = 'Y'
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true and check3==false">
		 		where o.ojt_status = 'N'
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==false and check3==true">
		 		where o.ojt_status = 'W'
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==true and check2==true and check3==false">
		 		where (o.ojt_status = 'Y' or o.ojt_status = 'N')
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==true and check2==false and check3==true">
		 		where (o.ojt_status = 'Y' or o.ojt_status = 'W')
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true and check3==true">
		 		where (o.ojt_status = 'N' or o.ojt_status = 'W')
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<otherwise>
		 		where m.mem_name like '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
	</select>
	
	<select id="SearchOjtList" resultMap="resultOjt">
		select o.mem_no
		     , m.mem_name
		     , d.dept_name
		     , j.job_name
		     , ojt_date
		     , ojt_status
		     , m.mem_email
		  from tb_ojt o  
		  join tb_member m on (o.mem_no = m.mem_no)
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		  <choose>
		 	<when test="check1==true and check2==false and check3==false">
		 		where o.ojt_status = 'Y'
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true and check3==false">
		 		where o.ojt_status = 'N'
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==false and check3==true">
		 		where o.ojt_status = 'W'
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==true and check2==true and check3==false">
		 		where (o.ojt_status = 'Y' or o.ojt_status = 'N')
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==true and check2==false and check3==true">
		 		where (o.ojt_status = 'Y' or o.ojt_status = 'W')
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<when test="check1==false and check2==true and check3==true">
		 		where (o.ojt_status = 'N' or o.ojt_status = 'W')
		 		  and m.mem_name like '%'||#{keyword}||'%'
		 	</when>
		 	<otherwise>
		 		where m.mem_name like '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
		 order
		    by o.mem_no desc
	</select>
	
	<update id="updateOjtDate">
		update tb_ojt
		   set ojt_status = 'W',
		       ojt_date = #{sendDate}
		 where mem_no = #{memNo}
	</update>
	
	<insert id="sendOjtMail">
		insert 
		  into tb_mail
		     (mail_no
		    , mem_no
		    , receiver_mem
		    , mail_title
		    , mail_content
		    , mail_type
		     )
		values
			(
		     seq_mano.nextval
		   , #{sendUserNo}
		   , #{memEmailStr}
		   , #{sendTitle}
		   , #{sendContent}
		   , 1
			)
		   
	</insert>
	
	<insert id="addOjtMailStatus">
		<foreach collection="list" item="li" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
			  into tb_mail_status
			     (mail_no
			    , send_mail
			    , receive_mail
			    , mail_folder
			     )
			values
				(
			     seq_mano.currval
			   , #{li.sendMail}
			   , #{li.receiveMail}
			   , #{li.mailFolder}
				)
		</foreach>
	</insert>
	
	<update id="completeOjt">
		update tb_ojt
		   set ojt_status = 'Y'
		 where mem_no = #{memNo}
	</update>
	
	<update id="cancelOjt">
		update tb_ojt
		   set ojt_status = 'N',
		   	   ojt_date = null
		 where mem_no = #{memNo}
	</update>
	
	<select id="searchRestdate" resultMap="resultRestDate">
		SELECT RE_RESTDATE
		     , RE_DATENAME
		  FROM TB_RESTDATE
		 WHERE TO_DATE(RE_RESTDATE) BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
	</select>
	
	<select id="AtListCount" resultType="_int">
	SELECT COUNT(*)
	FROM(
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE WORKING_DAY &lt;= TO_DATE(#{endDate})
			<if test="deptCode != 'all'">
				AND DEPT_CODE = #{deptCode}
			</if>
			<if test="jobCode != 'all'">
				AND JOB_CODE = #{jobCode}
			</if>
			
			AND MEM_NAME LIKE '%'||#{keyword}||'%'
			ORDER BY 4 DESC, 2)
		WHERE 
			<choose>
			 	<when test="check1==true and check2==false and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H')
			 	</when>
			 	<when test="check1==false and check2==true and check3==false">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==false and check2==false and check3==true">
			 		(ATT_STATUS = 'F')
			 	</when>
			 	<when test="check1==true and check2==true and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H' OR ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==true and check2==false and check3==true">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H' OR ATT_STATUS = 'F')
			 	</when>
			 	<when test="check1==false and check2==true and check3==true">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E' OR ATT_STATUS = 'F')
			 	</when>
			 	<otherwise>
			 		1=1
			 	</otherwise>
			 </choose>
			 <choose>
			 	<when test="list == null">
			 	
			 	</when>
			 	<otherwise>
			 		<foreach collection="list" item="date">
			 			AND ATT_DATE != #{date.reRestdate}
			 		</foreach>
			 	</otherwise>
			 </choose>
			 )
	</select>
	
	<select id="AtListCount2" resultType="_int">
	SELECT COUNT(*)
	FROM(
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE WORKING_DAY &lt;= TO_DATE(#{endDate})
			ORDER BY 4 DESC, 2)
		WHERE 
			<choose>
			 	<when test="check1==true and check2==false and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H')
			 	</when>
			 	<when test="check1==false and check2==true and check3==false">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==false and check2==false and check3==true">
			 		(ATT_STATUS = 'F')
			 	</when>
			 	<otherwise>
			 		1=1
			 	</otherwise>
			 </choose>
			 AND MEM_NO = #{userNo}
			 <choose>
			 	<when test="list == null">
			 	
			 	</when>
			 	<otherwise>
			 		<foreach collection="list" item="date">
			 			AND ATT_DATE != #{date.reRestdate}
			 		</foreach>
			 	</otherwise>
			 </choose>
			 )
	</select>
	
	<select id="searchDetailAt" resultMap="resultAtt">
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , M.MEM_ENROLL_DATE
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE WORKING_DAY &lt;= TO_DATE(#{endDate})
			<if test="list != null">
			 		<foreach collection="list" item="date">
			 			AND WORKING_DAY != #{date.reRestdate}
			 		</foreach>
			 </if>
			ORDER BY 4 DESC, 2)
		WHERE MEM_NO = #{userNo}
	</select>
	
	<select id="searchAtList" resultMap="resultAtt">
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , M.MEM_ENROLL_DATE
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE WORKING_DAY &lt;= TO_DATE(#{endDate})
			<if test="deptCode != 'all'">
				AND DEPT_CODE = #{deptCode}
			</if>
			<if test="jobCode != 'all'">
				AND JOB_CODE = #{jobCode}
			</if>
			
			AND MEM_NAME LIKE '%'||#{keyword}||'%'
			ORDER BY 5 DESC, 2)
		WHERE 
			<choose>
			 	<when test="check1==true and check2==false and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H')
			 	</when>
			 	<when test="check1==false and check2==true and check3==false">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==false and check2==false and check3==true">
			 		(ATT_STATUS = 'F')
			 	</when>
			 	<when test="check1==true and check2==true and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H' OR ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==true and check2==false and check3==true">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H' OR ATT_STATUS = 'F')
			 	</when>
			 	<when test="check1==false and check2==true and check3==true">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E' OR ATT_STATUS = 'F')
			 	</when>
			 	<otherwise>
			 		1=1
			 	</otherwise>
			 </choose>
			 <choose>
			 	<when test="list == null">
			 	
			 	</when>
			 	<otherwise>
			 		<foreach collection="list" item="date">
			 			AND ATT_DATE != #{date.reRestdate}
			 		</foreach>
			 	</otherwise>
			 </choose>
	</select>
	
	<select id="searchMyAt" resultMap="resultAtt">
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , M.MEM_ENROLL_DATE
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			     , DY
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO, DY
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day,
			                             TO_CHAR(TRUNC(TO_DATE(#{startDate}), 'MM') + LEVEL - 1, 'DY') "DY"
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE WORKING_DAY &lt;= TO_DATE(#{endDate}) 
			 
			ORDER BY 4 DESC, 2)
	  WHERE MEM_NO = #{userNo}
	  	<choose>
			 	<when test="list == null">
			 	
			 	</when>
			 	<otherwise>
			 		<foreach collection="list" item="date">
			 			AND ATT_DATE != #{date.reRestdate}
			 		</foreach>
			 	</otherwise>
			 </choose>		
	</select>
	
	<insert id="insertAtDate">
		insert
		  into tb_attendance
		       (
		         att_no
		       , mem_no
		       , att_date
		       , att_in
		       , att_out
		       , att_workoff
		       , att_worktime
		       , att_status
		       , att_hstatus
		       )
		values (
		         seq_atteno.nextval
		       , #{memNo}
		       , #{attDate}
		       , #{attIn}  
		       , #{attOut}
		       , 'Y'
		       , #{attWorktime}
		       , #{attStatus}  
		       , #{attHstatus}  
		       )
	</insert>
	
	<update id="updateAtData">
		update tb_attendance
		   set att_in = #{attIn},
		       att_out = #{attOut},
		       <if test="attHstatus != 'H0'">
		       		att_workoff = 'Y',
		       </if>
		       att_worktime = #{attWorktime},
		       att_status = #{attStatus},
		       att_hstatus = #{attHstatus}
		 where att_no = #{attNo}
	</update>
	
	<delete id="deleteAtData">
		delete
		  from tb_attendance
		 where att_no = #{attNo}
	</delete>
	
	<select id="objectionManageCount" resultType="_int">
		SELECT COUNT(*)
		  FROM(
				SELECT ADJ_NO,
					   AD.ATT_NO,
					   AD.MEM_NO,
					   ADJ_OBJDATE,
					   ADJ_IN,
					   ADJ_OUT,
					   ADJ_REASON,
					   TO_CHAR(ADJ_DATE,'YYYY-MM-DD') "ADJ_DATE",
					   ADJ_FILE,
					   ADJ_STATUS,
					   ATT_IN,
					   ATT_OUT,
					   ATT_STATUS,
					   ATT_HSTATUS,
					   DEPT_NAME,
					   JOB_NAME,
					   MEM_NAME
				  FROM TB_ADJUST AD
				  LEFT JOIN TB_ATTENDANCE AT ON (AD.ATT_NO = AT.ATT_NO)
				  LEFT JOIN TB_MEMBER M ON (AD.MEM_NO = M.MEM_NO)
				  LEFT JOIN TB_DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
				  LEFT JOIN TB_JOB J ON (M.JOB_CODE = J.JOB_CODE)
				  WHERE ADJ_STATUS = 'W'
				  ORDER BY ADJ_NO DESC
				)
	</select>
	
	<select id="objectionManageList" resultMap="resultAdj">
				SELECT ADJ_NO,
					   AD.ATT_NO,
					   AD.MEM_NO,
					   ADJ_OBJDATE,
					   ADJ_IN,
					   ADJ_OUT,
					   ADJ_REASON,
					   TO_CHAR(ADJ_DATE,'YYYY-MM-DD') "ADJ_DATE",
					   ADJ_FILE,
					   ADJ_STATUS,
					   ATT_IN,
					   ATT_OUT,
					   ATT_STATUS,
					   ATT_HSTATUS,
					   DEPT_NAME,
					   JOB_NAME,
					   MEM_NAME,
					   M.DEPT_CODE,
					   M.JOB_CODE,
					   ADJ_DENYCONTENT
				  FROM TB_ADJUST AD
				  LEFT JOIN TB_ATTENDANCE AT ON (AD.ATT_NO = AT.ATT_NO)
				  LEFT JOIN TB_MEMBER M ON (AD.MEM_NO = M.MEM_NO)
				  LEFT JOIN TB_DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
				  LEFT JOIN TB_JOB J ON (M.JOB_CODE = J.JOB_CODE)
				  WHERE ADJ_STATUS = 'W'
				  ORDER BY ADJ_NO DESC
	</select>
	
	<select id="searchAdjCount" resultType="_int">
		SELECT COUNT(*)
		  FROM(
				SELECT ADJ_NO,
					   AD.ATT_NO,
					   AD.MEM_NO,
					   ADJ_OBJDATE,
					   ADJ_IN,
					   ADJ_OUT,
					   ADJ_REASON,
					   TO_CHAR(ADJ_DATE,'YYYY-MM-DD') "ADJ_DATE",
					   ADJ_FILE,
					   ADJ_STATUS,
					   ATT_IN,
					   ATT_OUT,
					   ATT_STATUS,
					   ATT_HSTATUS,
					   DEPT_NAME,
					   JOB_NAME,
					   MEM_NAME
				  FROM TB_ADJUST AD
				  LEFT JOIN TB_ATTENDANCE AT ON (AD.ATT_NO = AT.ATT_NO)
				  LEFT JOIN TB_MEMBER M ON (AD.MEM_NO = M.MEM_NO)
				  LEFT JOIN TB_DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
				  LEFT JOIN TB_JOB J ON (M.JOB_CODE = J.JOB_CODE)
				  WHERE 
				  		<choose>
					  		<when test="check1==true and check2==false">
					  			ADJ_STATUS = 'W'
					  		</when>
					  		<when test="check1==false and check2==true">
					  			ADJ_STATUS != 'W'
					  		</when>
					  		<otherwise>
					  			1=1
					  		</otherwise>
				  		</choose>
				  ORDER BY ADJ_NO DESC
				)
	</select>
	
	<select id="searchAdjList" resultMap="resultAdj">
				SELECT ADJ_NO,
					   AD.ATT_NO,
					   AD.MEM_NO,
					   ADJ_OBJDATE,
					   ADJ_IN,
					   ADJ_OUT,
					   ADJ_REASON,
					   TO_CHAR(ADJ_DATE,'YYYY-MM-DD') "ADJ_DATE",
					   ADJ_FILE,
					   ADJ_STATUS,
					   ATT_IN,
					   ATT_OUT,
					   ATT_STATUS,
					   ATT_HSTATUS,
					   DEPT_NAME,
					   JOB_NAME,
					   MEM_NAME,
					   M.DEPT_CODE,
					   M.JOB_CODE,
					   ADJ_DENYCONTENT
				  FROM TB_ADJUST AD
				  LEFT JOIN TB_ATTENDANCE AT ON (AD.ATT_NO = AT.ATT_NO)
				  LEFT JOIN TB_MEMBER M ON (AD.MEM_NO = M.MEM_NO)
				  LEFT JOIN TB_DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
				  LEFT JOIN TB_JOB J ON (M.JOB_CODE = J.JOB_CODE)
				  WHERE 
				  		<choose>
					  		<when test="check1==true and check2==false">
					  			ADJ_STATUS = 'W'
					  		</when>
					  		<when test="check1==false and check2==true">
					  			ADJ_STATUS != 'W'
					  		</when>
					  		<otherwise>
					  			1=1
					  		</otherwise>
				  		</choose>
				  ORDER BY ADJ_NO DESC
	</select>
	
	<update id="approveAdj">
		update tb_adjust
		   set adj_status = 'A'
		 where adj_no = #{adjNo}
	</update>
	
	<update id="refuseAdj">
		update tb_adjust
		   set adj_status = 'D',
		       adj_denycontent = #{adjDenycontent}
		 where adj_no = #{adjNo}
	</update>
	
	<select id="selectAllMem" resultMap="resultOjt">
		select m.mem_no
		     , m.mem_name
		     , d.dept_name
		     , j.job_name
		  from tb_member m 
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		  order by m.mem_no
	</select>
	
	<select id="searchSelectMem" resultMap="resultOjt">
		select m.mem_no
		     , m.mem_name
		     , d.dept_name
		     , j.job_name
		  from tb_member m 
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		 where  m.mem_name like '%'||#{keyword}||'%'
		      <if test="deptCode != 'all'">
		       and m.dept_code = #{deptCode}
		      </if>
		      <if test="jobCode != 'all'">
		       and m.job_code = #{jobCode}
		      </if>
		  order by m.mem_no
	</select>
	
	<insert id="addHoliday">
		<foreach collection="memNos" item="arr" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
			  into tb_holiday
			     (mem_no
			    , ho_num
			    , ho_comment
			     )
			values
				(
			     #{arr}
			   , #{dateCount}
			   , #{comment}
				)
		</foreach>
	</insert>
	
	<insert id="deleteHoliday">
		<foreach collection="memNos" item="arr" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
			  into tb_holiday
			     (mem_no
			    , ho_num
			    , ho_comment
			     )
			values
				(
			     #{arr}
			   , #{dateCount}
			   , #{comment}
				)
		</foreach>
	</insert>
	
	<insert id="adhFormInsert">
		insert
		  into tb_adjust
		     ( adj_no
		     , mem_no
		     , adj_objdate
		     , adj_in
		     , adj_out
		     , adj_reason
		     <if test="keyword != null">
		     , adj_file
		     </if>
		     <if test="deptCode != null">
		     , att_no
		     </if>  
		     )
		values
		     ( seq_adjno.nextval
		     , #{userNo}
		     , #{startDate}
		     , #{startTime}
		     , #{endTime}
		     , #{reason}
		     <if test="keyword != null">
		     , #{keyword}
		     </if>
		     <if test="deptCode != null">
		     , #{deptCode}
		     </if>  
		     ) 
	</insert>
	
	<select id="checkedAdj" resultMap="resultAdj">
				SELECT ADJ_NO,
					   ATT_NO,
					   MEM_NO,
					   ADJ_OBJDATE,
					   ADJ_IN,
					   ADJ_OUT,
					   ADJ_REASON,
					   TO_CHAR(ADJ_DATE,'YYYY-MM-DD') "ADJ_DATE",
					   ADJ_FILE,
					   ADJ_STATUS,
					   ADJ_DENYCONTENT
				  FROM TB_ADJUST 
				 WHERE MEM_NO = #{userNo}
				   AND ADJ_OBJDATE = #{startDate}
				   AND ADJ_STATUS = 'W'
	</select>
	
	<select id="checkedCountIn" resultType="_int">
		select count(*)
		  from tb_attendance
		 where mem_no = #{userNo}
		   and att_date = #{startDate} 
	</select>
	
	<select id="checkedCountIn2" resultType="string">
		select att_in
		  from tb_attendance
		 where mem_no = #{userNo}
		   and att_date = #{startDate} 
	</select>
		
	<select id="checkedIn" resultMap="resultAtt">
		select att_no,
		       mem_no,
		       att_date,
		       att_fixedin,
		       att_fixedout,
		       att_in,
		       att_out,
		       att_workoff,
		       att_worktime,
		       att_status,
		       att_hstatus
		  from tb_attendance
		 where mem_no = #{userNo}
		   and att_date = #{startDate} 
	</select>
	
	<select id="chechOutTime" resultType="string">
		select att_fixedout
		  from tb_attendance
		 where mem_no = #{userNo}
		   and att_date = #{startDate} 
	</select>
	
	<insert id="insertAttIn">
		insert
		  into tb_attendance
		       ( att_no
		       , mem_no
		       , att_date
		       , att_in
		       , att_workoff
		       , att_status
		    	)
		 values ( seq_atteno.nextval
		        , #{memNo}
		        , #{attDate}
		        , #{attIn}
		        , 'N'
		        , #{attStatus}
		 		)
	</insert>
	
	<update id="updateAttIn">
		update tb_attendance
		   set att_in = #{attIn},
		       att_workoff = 'N',
		       att_status = #{attStatus}
		  where att_no = #{attNo}
	</update>
	
	<update id="updateOut">
		update tb_attendance
		   set att_out = #{attOut},
		       att_workoff = 'Y',
		       att_worktime = #{attWorktime}
		       <if test='attStatus.equals("E")'>
		       ,att_status = 'E'
		       </if>
		  where att_no = #{attNo}
	</update>
	
	<select id="adjustMeCount" resultType="_int">
				SELECT COUNT(*)
				  FROM TB_ADJUST AD
				  LEFT JOIN TB_ATTENDANCE AT ON (AD.ATT_NO = AT.ATT_NO)
				  LEFT JOIN TB_MEMBER M ON (AD.MEM_NO = M.MEM_NO)
				  LEFT JOIN TB_DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
				  LEFT JOIN TB_JOB J ON (M.JOB_CODE = J.JOB_CODE)
				  WHERE AD.MEM_NO = #{memNo}
				  ORDER BY ADJ_NO DESC
	</select>
	
	<select id="adjustMe" resultMap="resultAdj">
				SELECT ADJ_NO,
					   AD.ATT_NO,
					   AD.MEM_NO,
					   ADJ_OBJDATE,
					   ADJ_IN,
					   ADJ_OUT,
					   ADJ_REASON,
					   TO_CHAR(ADJ_DATE,'YYYY-MM-DD') "ADJ_DATE",
					   ADJ_FILE,
					   ADJ_STATUS,
					   ATT_IN,
					   ATT_OUT,
					   ATT_STATUS,
					   ATT_HSTATUS,
					   DEPT_NAME,
					   JOB_NAME,
					   MEM_NAME,
					   M.DEPT_CODE,
					   M.JOB_CODE,
					   ADJ_DENYCONTENT
				  FROM TB_ADJUST AD
				  LEFT JOIN TB_ATTENDANCE AT ON (AD.ATT_NO = AT.ATT_NO)
				  LEFT JOIN TB_MEMBER M ON (AD.MEM_NO = M.MEM_NO)
				  LEFT JOIN TB_DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
				  LEFT JOIN TB_JOB J ON (M.JOB_CODE = J.JOB_CODE)
				  WHERE AD.MEM_NO = #{memNo}
				  ORDER BY ADJ_NO DESC
	</select>
	
	<update id="adjModify">
		update tb_adjust
		   set adj_reason = #{reason}
		   <if test="keyword != null">
		   	, adj_file = #{keyword}
		   </if>
		 where adj_no = #{userNo}
	</update>
	
	<delete id="adjDelete">
		delete 
		  from tb_adjust
		 where adj_no = #{userNo}
	</delete>
	
	<select id="hoApproveCount" resultType="_int">
		select count(*)
		  from TB_APRV_FORM ap
		  join TB_ANNUAL_LEAVE al on (ap.aprv_no = al.aprv_no)
		 where mem_no = #{memNo}
		   and substr(LEAVE_START_DATE,0,4) = #{year}
		 order 
		    by LEAVE_START_DATE desc
	</select>
	
	<select id="hoApproveList" resultMap="resultHolidayForm">
		select ap.aprv_no
		     , mem_no
		     , APRV_TYPE
		     , APRV_DOC_STATUS
		     , APRV_DOC_ENDATE
		     , APRV_STATUS
		     , LEAVE_TYPE
		     , LEAVE_START_DATE
		     , LEAVE_END_DATE
		     , REQUEST_PERIOD
		     , S_HALF_DAY_LEAVE
		     , F_HALF_DAY_LEAVE
		     , LEAVE_REASON
		  from TB_APRV_FORM ap
		  join TB_ANNUAL_LEAVE al on (ap.aprv_no = al.aprv_no)
		 where mem_no = #{memNo}
		   and substr(LEAVE_START_DATE,0,4) = #{year}
	</select>
	
	<select id="hoCount" resultType="_int">
		select count(*)
		  from tb_holiday
		 where mem_no = #{memNo}
		   and extract(YEAR from ho_date) = #{year}
	</select>
	
	<select id="hoList" resultMap="resultHoliday">
		select mem_no
		     , to_char(ho_date,'YYYY-MM-DD') ho_date
		     , ho_num
		     , ho_comment
		  from tb_holiday
		 where mem_no = #{memNo}
		   and extract(YEAR from ho_date) = #{year}
		 order
		   by 2 desc
	</select>
	
	<select id="totalHo" resultType="string">
		select sum(ho_num)
		  from tb_holiday 
		 where extract(YEAR from ho_date) = extract(YEAR from sysdate)
		   and mem_no = #{memNo}
	</select>
	
	<select id="useHo" resultType="string">
		select sum(REQUEST_PERIOD)
		  from tb_aprv_form ap
		  join tb_annual_leave al on (ap.aprv_no=al.aprv_no)
		 where ap.mem_no = #{memNo}
		   and substr(LEAVE_START_DATE,0,4) = to_char(sysdate,'YYYY')
		   and APRV_STATUS = 'D'
	</select>
	
	<select id="holidayMgCount" resultType="_int">
		select count(*)
		  from TB_APRV_FORM af
		  join TB_ANNUAL_LEAVE al on (af.aprv_no = al.aprv_no)
		  join tb_member m on (m.mem_no = af.mem_no)
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		 where APRV_STATUS = 'D'
		 <if test="deptCode != null and deptCode!='all'">
		 	and m.dept_code = #{deptCode}
		 </if>
		 <if test="jobCode != null and jobCode!='all'">
		 	and m.job_code = #{jobCode}
		 </if>
		 <if test="startDate != null">
		 	and to_date(APRV_DOC_ENDATE) between to_date(#{startDate}) and to_date(#{endDate}) 
		 </if>
		 <if test="check3 == true">
		 	and LEAVE_REASON IS NULL
		 </if>
		   and mem_name like '%'||#{keyword}||'%'
	</select>
	
	<select id="holidayMgList" resultMap="resultHolidayForm">
		select af.mem_no,
			   af.aprv_no,
			   mem_name,
		       dept_name,
		       job_name,
		       LEAVE_START_DATE,
		       LEAVE_END_DATE,
		       REQUEST_PERIOD,
		       S_HALF_DAY_LEAVE,
		       F_HALF_DAY_LEAVE,
		       leave_type,
		       leave_reason
		  from TB_APRV_FORM af
		  join TB_ANNUAL_LEAVE al on (af.aprv_no = al.aprv_no)
		  join tb_member m on (m.mem_no = af.mem_no)
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		 where APRV_STATUS = 'D'
		 <if test="deptCode != null and deptCode!='all'">
		 	and m.dept_code = #{deptCode}
		 </if>
		 <if test="jobCode != null and jobCode!='all'">
		 	and m.job_code = #{jobCode}
		 </if>
		 <if test="startDate != null">
		 	and to_date(APRV_DOC_ENDATE) between to_date(#{startDate}) and to_date(#{endDate}) 
		 </if>
		 <if test="check3 == true">
		 	and LEAVE_REASON IS NULL
		 </if>
		   and mem_name like '%'||#{keyword}||'%'
		 order
		    by 2 desc
	</select>
	
	<select id="holidayAddCount" resultType="_int">
		select count(*)
		  from tb_holiday h
		  join tb_member m on (m.mem_no = h.mem_no)
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		 where mem_name like '%'||#{keyword}||'%'
		 <if test="deptCode != null and deptCode!='all'">
		 	and m.dept_code = #{deptCode}
		 </if>
		 <if test="jobCode != null and jobCode!='all'">
		 	and m.job_code = #{jobCode}
		 </if>
		 <if test="startDate != null">
		 	and ho_date between to_date(#{startDate}) and to_date(#{endDate}) 
		 </if>
	</select>
	
	<select id="holidayAddList" resultMap="resultHoliday">
		select h.mem_no,
		       mem_name,
		       dept_name,
		       job_name,
		       to_char(ho_date,'YYYY-MM-DD') ho_date,
		       ho_date AS "HO",
		       ho_num,
		       ho_comment
		  from tb_holiday h
		  join tb_member m on (m.mem_no = h.mem_no)
		  join tb_department d on (d.dept_code = m.dept_code)
		  join tb_job j on (j.job_code = m.job_code)
		  where mem_name like '%'||#{keyword}||'%'
		 <if test="deptCode != null and deptCode!='all'">
		 	and m.dept_code = #{deptCode}
		 </if>
		 <if test="jobCode != null and jobCode!='all'">
		 	and m.job_code = #{jobCode}
		 </if>
		 <if test="startDate != null">
		 	and to_date(ho_date) between to_date(#{startDate}) and to_date(#{endDate}) 
		 </if>
		 order by 6 desc
	</select>
	
	<insert id="updatefixout">
		insert
		  into tb_attendance
		     ( att_no
		     , mem_no
		     , att_date
		     , att_fixedout
		     , att_status
		     , att_hstatus
		     )
	   values
	        ( seq_atteno.nextval
	        , #{userNo}
	        , #{startDate}
	        , '13:00'
	        , 'H'
	        , 'H2'
	        ) 
	</insert>
	
	<insert id="updatefixin">
		insert
		  into tb_attendance
		     ( att_no
		     , mem_no
		     , att_date
		     , att_fixedin
		     , att_status
		     , att_hstatus
		     )
	   values
	        ( seq_atteno.nextval
	        , #{userNo}
	        , #{startDate}
	        , '14:00'
	        , 'H'
	        , 'H1'
	        ) 
	</insert>
	
	<insert id="insertho">
		insert
		  into tb_attendance
		     ( att_no
		     , mem_no
		     , att_date
		     , att_status
		     , att_hstatus
		     )
	   values
	        ( seq_atteno.nextval
	        , #{userNo}
	        , #{startDate}
	        , 'H'
	        , 'H0'
	        ) 
	</insert>
	
	<update id="updateannl">
		UPDATE TB_ANNUAL_LEAVE
		   SET LEAVE_REASON = '등록완료'
		 WHERE APRV_NO = #{keyword}
	</update>
	
	<insert id="updateh1">
		insert
		  into tb_attendance
		     ( att_no
		     , mem_no
		     , att_date
		     , att_fixedin
		     , att_status
		     , att_hstatus
		     )
	   values
	        ( seq_atteno.nextval
	        , #{userNo}
	        , #{startDate}
	        , '14:00'
	        , 'H'
	        , 'H1'
	        ) 
	</insert>
	
	<insert id="updateh2">
		insert
		  into tb_attendance
		     ( att_no
		     , mem_no
		     , att_date
		     , att_fixedout
		     , att_status
		     , att_hstatus
		     )
	   values
	        ( seq_atteno.nextval
	        , #{userNo}
	        , #{startDate}
	        , '13:00'
	        , 'H'
	        , 'H2'
	        ) 
	</insert>
	
	<select id="countWorktime" resultType="string">
		  SELECT SUM(att_worktime)
			FROM tb_attendance
			WHERE SUBSTR(ATT_DATE,0,7)=#{str}
			  AND MEM_NO=#{userNo}
	</select>
	
	<select id="AtListCount3" resultType="_double">
	SELECT COUNT(*)
	FROM(
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE TO_CHAR(WORKING_DAY,'YYYY-MM') = #{endDate}
			ORDER BY 4 DESC, 2)
		WHERE 
			<choose>
			 	<when test="check1==true and check2==false and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H')
			 	</when>
			 	<when test="check1==false and check2==true and check3==false">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==false and check2==false and check3==true">
			 		(ATT_STATUS = 'F')
			 	</when>
			 	<otherwise>
			 		1=1
			 	</otherwise>
			 </choose>
			 AND MEM_NO = #{userNo}
			 <choose>
			 	<when test="list == null">
			 	
			 	</when>
			 	<otherwise>
			 		<foreach collection="list" item="date">
			 			AND ATT_DATE != #{date.reRestdate}
			 		</foreach>
			 	</otherwise>
			 </choose>
			 )
	</select>
	
	<select id="AtListCount4" resultType="_double">
	SELECT COUNT(*)
	FROM(
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE TO_CHAR(WORKING_DAY,'YYYY-MM-DD') &lt;= TO_CHAR(SYSDATE,'YYYY-MM-DD')
			ORDER BY 4 DESC, 2)
		WHERE 
			<choose>
			 	<when test="check1==true and check2==false and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H')
			 	</when>
			 	<when test="check1==false and check2==true and check3==false">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==false and check2==false and check3==true">
			 		(ATT_STATUS = 'F')
			 	</when>
			 	<otherwise>
			 		1=1
			 	</otherwise>
			 </choose>
			 AND MEM_NO = #{userNo}
			 <choose>
			 	<when test="list == null">
			 	
			 	</when>
			 	<otherwise>
			 		<foreach collection="list" item="date">
			 			AND ATT_DATE != #{date.reRestdate}
			 		</foreach>
			 	</otherwise>
			 </choose>
			 )
	</select>
	
	<select id="searchRestdate2" resultMap="resultRestDate">
		SELECT RE_RESTDATE
		     , RE_DATENAME
		  FROM TB_RESTDATE
		 WHERE SUBSTR(RE_RESTDATE,0,7) = #{endDate}
	</select>
	
	<select id="countWeekWorktime" resultType="string">
		  SELECT SUM(att_worktime)
			FROM tb_attendance
			WHERE TO_DATE(att_date) BETWEEN TO_DATE(#{startDate}) AND TO_DATE(#{endDate})
			  AND MEM_NO=#{userNo}
	</select>
	
	<select id="atListWeekCount" resultType="_double">
	SELECT COUNT(*)
	FROM(
		SELECT *
		FROM(
			SELECT 
			       A.ATT_NO 
			     , C.MEM_NO
			     , M.MEM_NAME
			     , NVL(ATT_DATE, TO_CHAR(WORKING_DAY, 'YYYY-MM-DD')) att_date
			     , ATT_FIXEDIN
			     , ATT_FIXEDOUT
			     , ATT_IN
			     , ATT_OUT
			     , ATT_WORKOFF
			     , ATT_WORKTIME
			     , NVL(ATT_STATUS, 'F') att_status
			     , ATT_HSTATUS
			FROM TB_ATTENDANCE A
			right JOIN (
			                SELECT WORKING_DAY, MEM_NO
			                FROM (
			                            SELECT TO_DATE(#{startDate}) + LEVEL - 1 working_day
			                            FROM DUAL
			                        CONNECT BY LEVEL &lt;= 1000
			                    ), (SELECT * FROM TB_MEMBER)
			            ) C ON (ATT_DATE = WORKING_DAY AND A.MEM_NO = C.MEM_NO)
			JOIN TB_MEMBER M ON (C.MEM_NO=M.MEM_NO)
			WHERE WORKING_DAY &lt;= TO_DATE(#{endDate})
			ORDER BY 4 DESC, 2)
		WHERE 
			<choose>
			 	<when test="check1==true and check2==false and check3==false">
			 		(ATT_STATUS = 'D' OR ATT_STATUS = 'H')
			 	</when>
			 	<when test="check1==false and check2==true and check3==false">
			 		(ATT_STATUS = 'L' OR ATT_STATUS = 'E')
			 	</when>
			 	<when test="check1==false and check2==false and check3==true">
			 		(ATT_STATUS = 'F')
			 	</when>
			 	<otherwise>
			 		1=1
			 	</otherwise>
			 </choose>
			 AND MEM_NO = #{userNo}
			 <choose>
			 	<when test="list == null">
			 	
			 	</when>
			 	<otherwise>
			 		<foreach collection="list" item="date">
			 			AND ATT_DATE != #{date.reRestdate}
			 		</foreach>
			 	</otherwise>
			 </choose>
			 )
	</select>
	
	<select id="memNolists" resultMap="resultAutoHo">
		SELECT MEM_NO
		     , MEM_NAME
		     , MEM_ENROLL_DATE
		     , MEM_COUNT
		     , TRUNC(MONTHS_BETWEEN(SYSDATE, MEM_ENROLL_DATE) / 12) AS "year"
		     , TRUNC(MOD(MONTHS_BETWEEN(SYSDATE, MEM_ENROLL_DATE) / 12, 1) * 12) AS "month"
		     , TRUNC(MOD(MOD(MONTHS_BETWEEN(SYSDATE, MEM_ENROLL_DATE) / 12, 1) * 12, 1) * (365 / 12)) AS "day"
		  FROM TB_MEMBER
		 where MEM_RESIGN_STATUS = 'N'
	</select>
	
	<insert id="sendAutoHo1">
		insert 
		  into tb_holiday (
		  		mem_no
		  	  , ho_num
		  	  , ho_comment
		  	   )
		 values (
		 	     #{no}
		 	   , 1
		 	   , '자동월차'
		 		)
	</insert>
	
	<update id="updateAutoHo1">
		update tb_member
		   set mem_count = mem_count+0.05
		 where mem_no = #{no}
	</update>
	
	<insert id="sendAutoHo15">
		insert 
		  into tb_holiday (
		  		mem_no
		  	  , ho_num
		  	  , ho_comment
		  	   )
		 values (
		 	     #{no}
		 	   , 15
		 	   , '자동연차'
		 		)
	</insert>
	
	<update id="updateAutoHo15">
		update tb_member
		   set mem_count = mem_count+1
		 where mem_no = #{no}
	</update>
	
	<update id="changePwd">
		update tb_member
		   set mem_pwd = #{memPwd}
		 where mem_no = #{memNo}
	</update>
	
</mapper>
